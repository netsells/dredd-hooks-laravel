#!/usr/bin/env php
<?php

/*
 * This is mostly taken from ddelnano/dredd-hooks-php
 */

use Dredd\Server;
use Dredd\Hooks;
use PhpParser\ParserFactory;

ini_set('implicit_flush', 'on');
ini_set('output_buffering', 'off');

$basePath = __DIR__ . '/../../../..';

$loaded = false;
foreach ([$basePath . '/vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        $loaded = true;
        break;
    }
}
if (!$loaded) {
    die(
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

// Laravel will not overwrite existing environment variables, so we'll pull in custom ones here
if (file_exists($basePath . '/.env.dredd')) {
    $dotenv = Dotenv\Dotenv::createMutable($basePath, '.env.dredd');
    $dotenv->load();
}

// Load Laravel
$app = require $basePath . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

// Get options from the command line
$options = getopt('', [
    'host:',
    'port:',
    'force',
]);

// Second argument is the single kernel file
$dreddKernelPath = $argv[1];
$parser = (new ParserFactory)->create(ParserFactory::PREFER_PHP7);

try {
    $statements = $parser->parse(file_get_contents($dreddKernelPath));
} catch (PhpParser\Error $e) {
    echo "Failed parsing {$dreddKernelPath} - " . $e->getMessage();
    die();
}

try {
    if ($statements[0] instanceof  PhpParser\Node\Stmt\Namespace_) {
        $kernelClass = implode('\\', $statements[0]->name->parts);
        foreach ($statements[0]->stmts as $statement) {
            if ($statement instanceof PhpParser\Node\Stmt\Class_) {
                $kernelClass .= '\\' . $statement->name;
            }
        }
    }

    $kernel = new $kernelClass;
} catch (\Exception $e) {
    echo "Failed parsing {$dreddKernelPath}. Ensure the file has both a namespace and class name. [{$e->getMessage()}]";
    die();
}

$kernel->handle(new \Netsells\Dredd\Hook());

$host = array_key_exists('host', $options)
    ? $options['host']
    : '127.0.0.1';
$port = array_key_exists('port', $options)
    ? $options['port']
    : 61321;

$server = new Server($host, $port);

fprintf(STDOUT, "Starting server\n");
flush();

$server->run(array_key_exists('force', $options));
